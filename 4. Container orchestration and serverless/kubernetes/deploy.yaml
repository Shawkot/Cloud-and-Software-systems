apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: docker.io/cse4100/kubernetes-custom-nginx:1.0
        resources:
          limits:
            memory: "16Mi"
            cpu: "100m"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-auth
          mountPath: /etc/nginx/.htpasswd
          subPath: htpasswd
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          
      volumes:
      - name: nginx-auth
        secret:
          secretName: nginx-auth
      - name: nginx-config
        configMap:
          name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: css-secret-web-server
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        keepalive_timeout  65;

        # Add the server block here
        server {
            listen 80;

            # /public directory, accessible without authentication
            location /public {
              root /usr/share/nginx;
              auth_basic off;
            }

            # Root path requires authentication
            location / {
                auth_basic "Restricted Access";
                auth_basic_user_file /etc/nginx/.htpasswd;

                root /usr/share/nginx/html;

                # Respond with 401 if authentication fails
                error_page 401 /401.html;
                location = /401.html {
                    default_type text/html;
                    return 401 "unauthorized (401)";
                }
            }
        }
    }
